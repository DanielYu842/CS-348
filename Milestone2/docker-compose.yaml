version: "3.8"

services:
  database:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=passcode
      - POSTGRES_DB=test_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - services-net 
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 2s
      timeout: 5s
      retries: 5

  sceneit:
    build: ./sceneit
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - services-net
    volumes:
      - ./sceneit:/app
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
    command:
      uvicorn main:app --host 0.0.0.0 --port ${BACKEND_PORT} --reload --reload-dir /app

  sceneit-frontend:
    build: 
      context: ./sceneit-frontend
      args:
        REACT_APP_API_URL: "${BACKEND_URL}"
    depends_on:
      - sceneit
    ports:
      - "3000:80"
    networks:
      - services-net
    environment:
      - REACT_APP_API_URL=${BACKEND_URL}
    command: [ "nginx", "-g", "daemon off;" ]

networks:
  services-net:
    driver: bridge

volumes:
  pgdata:
    driver: local
